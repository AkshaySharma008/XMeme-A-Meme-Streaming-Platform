{"version":3,"sources":["pages/navbar/index.jsx","components/memeForm/meme-favicon.png","components/memeForm/index.jsx","components/editForm/index.jsx","components/allMemes/index.jsx","pages/homepage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-placement","title","target","aria-hidden","MemeForm","memeform","setMemeAdded","memeAdded","useState","memerName","setMemerName","memerCaption","setCaption","memeUrl","setMemeUrl","buttonText","setButtonText","buttonDisable","setButtonDisable","resetStates","src","cardIcon","alt","onSubmit","e","preventDefault","data","name","caption","url","axios","post","then","res","status","Swal","fire","icon","showConfirmButton","timer","catch","err","id","placeholder","value","onChange","disabled","EditForm","meme","setEditModal","handleSubmit","a","memeId","_id","apiUrl","patch","console","log","cancelEditing","onClick","AllMemes","memes","setAllMemes","loading","setLoading","isEditModal","editMemeData","setEditMemeData","loadData","useCallback","get","useEffect","editMeme","onScroll","scroll","map","index","IconButton","aria-label","color","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","HomePage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85e4a88b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n        <div className=\"d-flex justify-content-around  p-2 border-bottom navbar px-5\">\r\n            <a href='#' className=\"flex-grow-1 ml-5 bd-highlight title\">X-Meme</a>\r\n            <div className=\"action-buttons\">\r\n            <button type=\"button\" className=\"mt-2 btn btn-danger\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Coming Soon ..\">Login</button>\r\n            <button type=\"button\" className=\"mt-2 btn btn-outline-danger\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Coming Soon ..\">Sign Up</button>\r\n            <a href='https://akshaysharma.co.in' target=\"_blank\" className=\"guidelines-logo\"> <i className=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a> \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/meme-favicon.070f791b.png\";","import React from 'react'\r\nimport './styles.css'\r\nimport cardIcon from './meme-favicon.png'\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MemeForm = ({memeform, setMemeAdded, memeAdded}) => {\r\n    const [memerName ,setMemerName ] = useState('');\r\n    const [memerCaption ,setCaption ] = useState('');\r\n    const [memeUrl ,setMemeUrl ] = useState('');\r\n    const [buttonText , setButtonText] = useState('Submit Your Meme')\r\n    const [buttonDisable , setButtonDisable] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setButtonText('Submitting ...');\r\n        setButtonDisable(true);\r\n        const data = {\r\n            name: memerName,\r\n            caption: memerCaption,\r\n            url: memeUrl\r\n        }\r\n        const apiUrl = '/memes';\r\n        axios.post(apiUrl, data).then((res) => {\r\n            if(res.status === 200){\r\n                setButtonText('Submit Your Meme');\r\n                setButtonDisable(false);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Your Meme has been Published !!',\r\n                    showConfirmButton: false,\r\n                    timer: 1800\r\n                  })\r\n                  resetStates();\r\n            }else{\r\n                setButtonText('Submit Your Meme')\r\n                setButtonDisable(false);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'OOPS Something went wrong !!',\r\n                    showConfirmButton: false,\r\n                    timer: 1800\r\n                  })\r\n            }\r\n            \r\n        }).catch((err) => {\r\n            setButtonText('Submit Your Meme')\r\n            setButtonDisable(false);\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Please submit the data carefully !!',\r\n                showConfirmButton: false,\r\n                timer: 1800\r\n              })\r\n        })\r\n    }\r\n\r\n    const resetStates = () => {\r\n        setMemerName('');\r\n        setCaption('');\r\n        setMemeUrl('');\r\n        setMemeAdded(!memeAdded);\r\n    }\r\n\r\n\r\n    return (\r\n            <div className=\"card col-md-12 shadow bg-white rounded\">\r\n                <div className=\"card-body m-2\">\r\n                    <div className=\"col-md-3 m-auto\">\r\n                    <img src={cardIcon}  alt=\"card-image\" className=\"avatar\" /> \r\n                    </div>\r\n                    <h5 className=\"card-title text-center mt-4\">X-Meme</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted text-center\">Let's Play with Meme's</h6>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                    {/* Author's name */}\r\n                    <div className=\"input-group my-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"Name\"> Name </span>\r\n                        </div>\r\n                        <input\r\n                             type=\"text\" \r\n                             className=\"form-control\" \r\n                             placeholder=\"Memer's Name\" \r\n                             name=\"memerName\"\r\n                             value={memerName}\r\n                             onChange= {e => setMemerName(e.target.value)}\r\n                              />\r\n                    </div> \r\n                    {/* Meme's Caption */}\r\n                    <div className=\"input-group my-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"Caption\">Caption </span>\r\n                        </div>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Caption of the meme\" \r\n                            name=\"memerCaption\"\r\n                            value={memerCaption}\r\n                            onChange= {e => setCaption(e.target.value)}\r\n                            \r\n                        />\r\n                    </div> \r\n                    {/* Meme URL */}\r\n                    <div className=\"input-group my-3\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"URL of the Meme's Image / Gif\" \r\n                            name=\"memeUrl\"\r\n                            value={memeUrl}\r\n                            onChange= {e => setMemeUrl(e.target.value)} \r\n                            \r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\" id=\"memeUrl\">Meme URL</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Submit Button */}\r\n                    <div className=\"col-md-5 m-auto\">\r\n                    <button type=\"submit\"  className=\"btn btn-danger btn-lg\" disabled={buttonDisable} >{buttonText}</button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MemeForm","import React from 'react'\r\nimport './styles.css'\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst EditForm = ({meme, setEditModal , memeAdded, setMemeAdded}) => {\r\n    const [memerCaption ,setCaption ] = useState(meme.caption);\r\n    const [memeUrl ,setMemeUrl ] = useState(meme.url);\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const memeId = meme._id;\r\n        const apiUrl = `/memes/${memeId}`;\r\n        const data = {\r\n            caption: memerCaption,\r\n            url: memeUrl\r\n         }\r\n        await axios.patch(apiUrl, data).then((res) => {\r\n            if(res.status === 200){\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Your Meme has been Updated !!',\r\n                    showConfirmButton: false,\r\n                    timer: 1800\r\n                  })\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'OOPS Something went wrong !!',\r\n                    showConfirmButton: false,\r\n                    timer: 1800\r\n                  })\r\n            }\r\n            }).catch((e) => console.log(e))\r\n        setEditModal(false);\r\n        setMemeAdded(!memeAdded);\r\n    }\r\n\r\n    const cancelEditing = async(e) => {\r\n        e.preventDefault();\r\n        setEditModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card col-md-12 shadow bg-white rounded editForm\">\r\n             <form onSubmit={handleSubmit} className=\"p-3\">\r\n             <h5 className=\"card-title text-center mt-4\">X-Meme</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted text-center\">Let's Play with Meme's</h6>\r\n                    {/* Author's name */}\r\n                    <div className=\"input-group my-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"Name\"> Name </span>\r\n                        </div>\r\n                        <input\r\n                             type=\"text\" \r\n                             className=\"form-control\" \r\n                             placeholder=\"Memer's Name\" \r\n                             name=\"memerName\"\r\n                             value={meme.name}\r\n                             disabled={true}\r\n                              />\r\n                    </div> \r\n                    {/* Meme's Caption */}\r\n                    <div className=\"input-group my-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"Caption\">Caption </span>\r\n                        </div>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Caption of the meme\" \r\n                            name=\"memerCaption\"\r\n                            value={memerCaption}\r\n                            onChange= {e => setCaption(e.target.value)}\r\n                            \r\n                        />\r\n                    </div> \r\n                    {/* Meme URL */}\r\n                    <div className=\"input-group my-3\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"URL of the Meme's Image / Gif\" \r\n                            name=\"memeUrl\"\r\n                            value={memeUrl}\r\n                            onChange= {e => setMemeUrl(e.target.value)} \r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\" id=\"memeUrl\">Meme URL</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Submit Button */}\r\n                    <div className=\"col-md-8 m-auto\">\r\n                    <button type=\"submit\"  className=\"btn btn-success btn-lg\" >Edit your Meme</button> &nbsp;\r\n                    <button type=\"btn\"  className=\"btn btn-danger btn-lg\" onClick={cancelEditing} >Cancel</button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default EditForm","import React , { useState, useEffect, useCallback } from 'react'\r\nimport './styles.css'\r\nimport axios from 'axios';\r\nimport EditForm from '../editForm'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditSharpIcon from '@material-ui/icons/EditSharp';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst AllMemes = ({memeAdded , setMemeAdded}) => {\r\n        const [memes, setAllMemes] = useState([]);\r\n        const [loading, setLoading] = useState(true);\r\n        const [isEditModal, setEditModal] = useState(false); \r\n        const [editMemeData , setEditMemeData] = useState({});\r\n        const loadData = useCallback(async () => {\r\n            const apiUrl = '/memes';\r\n             await axios.get(apiUrl)\r\n                .then((res) => {\r\n                    setAllMemes(res.data.memes);\r\n                    setLoading(false);\r\n                });\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            loadData()\r\n        }, [memeAdded])\r\n\r\n\r\n        const deleteMeme = memeId => e => {\r\n            e.preventDefault();\r\n            const apiUrl = `/memes/${memeId}`;\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    axios.delete(apiUrl).then((res) => {\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Your Post deleted successfully !!',\r\n                            showConfirmButton: false,\r\n                            timer: 2000\r\n                          })\r\n                          setMemeAdded(!memeAdded);\r\n                    }).catch((e) => {\r\n                        console.log(e)\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops some error occured !!',\r\n                            showConfirmButton: false,\r\n                            timer: 2000\r\n                          })\r\n                    })\r\n                }\r\n              })\r\n\r\n          \r\n        }\r\n\r\n        const editMeme = meme => e => {\r\n            e.preventDefault();\r\n            setEditModal(true);\r\n            setEditMemeData(meme);\r\n        }\r\n\r\n        const getScroll = scroll => e => {\r\n            e.preventDefault();\r\n            console.log(scroll)\r\n        }\r\n\r\n        \r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"col-md-12 allMemes card p-3 shadow bg-white rounded\" onScroll={getScroll}>\r\n            <h4 className=\"card-title text-center mt-1\">X-Meme</h4>\r\n            <h5 className=\"card-subtitle mb-2 text-muted text-center\">Let's Play with Meme's</h5>\r\n\r\n            {\r\n                            (loading) ? (\r\n                                <div> Loading...\r\n                                </div>\r\n\r\n                            ) : (\r\n                                memes.map((meme, index) => {\r\n                                    return (\r\n                                        <div className=\"card col-md-12 shadow bg-white rounded p-3 mt-1\" key={index}>\r\n                                            <div className=\"row\">\r\n                                                <img src={meme.url} alt=\"Meme Image\" className=\"memeImg col-md-4\" />\r\n                                                <div className=\"col-md-7 m-2\">\r\n                                                    <h6> <span className=\"text-muted font-weight-bold\"> Meme's Caption :</span> {meme.caption} </h6>\r\n                                                    <span>\r\n                                                    <h6 ><span className=\"text-muted\"> Posted By :</span> {meme.name} </h6>   \r\n                                                    </span> \r\n                                                </div>\r\n                                                <div className=\"col-md-1\">\r\n                                                    <IconButton aria-label=\"delete\" color=\"secondary\" onClick={deleteMeme(meme._id)} > <DeleteIcon /> </IconButton>\r\n                                                    <IconButton aria-label=\"edit\" onClick={editMeme(meme)}> <EditSharpIcon /> </IconButton>\r\n                                                </div>\r\n                                            </div>\r\n                                         </div>\r\n                                    )\r\n                                })\r\n                                )\r\n            }\r\n        </div>\r\n        {isEditModal && <EditForm meme={editMemeData} setEditModal={setEditModal} setMemeAdded={setMemeAdded} memeAdded={memeAdded} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllMemes","import React, {useState} from 'react'\r\nimport './styles.css'\r\nimport MemeForm from '../../components/memeForm'\r\nimport AllMemes from '../../components/allMemes'\r\n\r\nconst HomePage = () => {\r\n\r\n    const [memeAdded , setMemeAdded] = useState(false);\r\n\r\n    return (\r\n        <div className=\"home col-md-12\">\r\n            <div className=\"col-md-12 p-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 p-5\">\r\n                    <AllMemes memeAdded={memeAdded} setMemeAdded={setMemeAdded}/>\r\n                    </div>\r\n                    <div className=\"col-md-5 p-5\">\r\n                    <MemeForm memeAdded={memeAdded} setMemeAdded={setMemeAdded}/>\r\n                    <div className=\"text-center p-5\">\r\n            <strong>Made with &#10084; by <a href=\"https://akshaysharma.co.in\">Akshay Sharma</a> at  <a>Crio.do</a></strong>\r\n        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import './App.css';\nimport Navbar from './pages/navbar'\nimport HomePage from './pages/homepage'\n\nfunction App() {\n  return (\n    <div>\n      <Navbar/>\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}